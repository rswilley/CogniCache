@using CogniCache.Domain.Repositories.SearchRepository
@inject ISearchRepository _searchRepository;

<TextEdit Text="@_searchQuery" Placeholder="Search..." TextChanged="@OnSearchQueryChanged" />

@code {
    [Parameter] 
    public EventCallback<IEnumerable<SearchSnippet>> OnSearchSnippetsReceived { get; set; }

    private string _searchQuery = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private async Task OnSearchQueryChanged(string searchQuery)
    {
        _searchQuery = searchQuery;

        if (_searchQuery.Length > 0) {
            var result = _searchRepository.Search(searchQuery);
            if (result != null)
            {
                await OnSearchSnippetsReceived.InvokeAsync(result.Snippets);
            }
        } else {
            await OnSearchSnippetsReceived.InvokeAsync(null);
        }
    }
}