@using CogniCache.Domain.Repositories.SearchRepository
@using CogniCache.Shared.Services

@inject ISearchRepository SearchRepository;
@inject INavigationService NavigationService

<Autocomplete TItem="SearchSnippet"
              TValue="SearchSnippet"
              Data="@_searchSnippetResults"
              ReadData="@OnHandleReadData"
              TextField="@(item => item.Title)"
              ValueField="@(item => item)"
              Placeholder="Search..."
              HighlightSearch>
    <NotFoundContent> Sorry... @context was not found! :( </NotFoundContent>
    <ItemContent>
        <Div Flex="Flex.InlineFlex.JustifyContent.Between">
            <Heading Margin="Margin.Is2.FromBottom">@context.Value.Title</Heading>
        </Div>
        <Paragraph Margin="Margin.Is2.FromBottom">@context.Value.Snippet</Paragraph>
    </ItemContent>
</Autocomplete>

@code {
    private IEnumerable<SearchSnippet> _searchSnippetResults = [];

    private Task OnHandleReadData(AutocompleteReadDataEventArgs autocompleteReadDataEventArgs)
    {
        if (autocompleteReadDataEventArgs.CancellationToken.IsCancellationRequested)
            return Task.CompletedTask;

        var result = SearchRepository.Search(autocompleteReadDataEventArgs.SearchValue);
        _searchSnippetResults = result.Snippets ?? [];
        return Task.CompletedTask;
    }

    private Task SelectedSearchSnippetChanged(SearchSnippet snippet)
    {
        NavigationService.NavigateToMemo(snippet.NoteId);
        //SelectedSearchSnippet = null;
        return Task.CompletedTask;
    }
}
